{"ast":null,"code":"var _jsxFileName = \"/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/src/components/feedArea.js\";\nimport React from 'react';\nimport BookMark from '@material-ui/icons/BookmarkBorder';\nimport OpenInBrowser from '@material-ui/icons/OpenInBrowser';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport './feedWidget.css';\n\nfunction formartDate(str) {\n  const dateStr1 = str.split('T')[0];\n  const dateStr2 = str.split('T')[1].split('.')[0];\n  return dateStr1 + ' ' + dateStr2;\n}\n\nfunction calDiffDate(date) {\n  if (!date) {\n    return '';\n  }\n\n  const today = new Date();\n  const startDate = formartDate(today.toISOString());\n  const endDate = formartDate(date);\n  const currentDate = moment.preciseDiff(moment(startDate, 'YYYY-MM-DD HH:mm:ss'), moment(endDate, 'YYYY-MM-DD HH:mm:ss'), true);\n\n  if (currentDate.years > 0) {\n    return ' | ' + currentDate.years + 'y';\n  }\n\n  if (currentDate.months > 0) {\n    return ' | ' + currentDate.months + 'M';\n  }\n\n  if (currentDate.days > 0) {\n    return ' | ' + currentDate.days + 'd';\n  }\n\n  if (currentDate.hours > 0) {\n    return ' | ' + currentDate.hours + 'h';\n  }\n\n  if (currentDate.minutes > 0) {\n    return ' | ' + currentDate.minutes + 'm';\n  }\n\n  return ' | 1m';\n}\n\nfunction FeedArea(feedContent) {\n  const feedDate = calDiffDate(feedContent.feedContent.date);\n\n  const oncli = () => {\n    window.open(feedContent.feedContent.url);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card\",\n    onClick: oncli,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, feedContent.feedContent.title)), React.createElement(\"div\", {\n    className: \"source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, feedContent.feedContent.publisher === \"CannabisNet\" ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Cananbis.net \", feedDate) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, feedContent.feedContent.publisher, \" \", feedDate)), React.createElement(\"div\", {\n    className: \"image-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: feedContent.feedContent.image,\n    className: \"image\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, feedContent.feedContent.description)), React.createElement(\"div\", {\n    className: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(OpenInBrowser, {\n    className: \"mr-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(BookMark, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n}\n\nexport default FeedArea;","map":{"version":3,"sources":["/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/src/components/feedArea.js"],"names":["React","BookMark","OpenInBrowser","moment","formartDate","str","dateStr1","split","dateStr2","calDiffDate","date","today","Date","startDate","toISOString","endDate","currentDate","preciseDiff","years","months","days","hours","minutes","FeedArea","feedContent","feedDate","oncli","window","open","url","title","publisher","image","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BookMark from '@material-ui/icons/BookmarkBorder';\nimport OpenInBrowser from '@material-ui/icons/OpenInBrowser';\n\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\n\nimport './feedWidget.css'\n\nfunction formartDate(str) {\n  const dateStr1 = str.split('T')[0];\n  const dateStr2 = str.split('T')[1].split('.')[0];\n\n  return dateStr1 + ' ' + dateStr2;\n}\n\nfunction calDiffDate(date) {\n  if (!date) {\n    return '';\n  }\n\n  const today = new Date();\n  const startDate = formartDate(today.toISOString());\n  const endDate = formartDate(date);\n\n  const currentDate = moment.preciseDiff(moment(startDate, 'YYYY-MM-DD HH:mm:ss'), moment(endDate, 'YYYY-MM-DD HH:mm:ss'), true);\n\n  if (currentDate.years > 0) {\n    return ' | ' + currentDate.years + 'y';\n  }\n\n  if (currentDate.months > 0) {\n    return ' | ' + currentDate.months + 'M';\n  }\n\n  if (currentDate.days > 0) {\n    return ' | ' + currentDate.days + 'd';\n  }\n\n  if (currentDate.hours > 0) {\n    return ' | ' + currentDate.hours + 'h';\n  }\n\n  if (currentDate.minutes > 0) {\n    return ' | ' + currentDate.minutes + 'm';\n  }\n\n  return ' | 1m';\n}\n\n\nfunction FeedArea(\n  feedContent,\n) {\n  const feedDate = calDiffDate(feedContent.feedContent.date);\n\n  const oncli = () => {\n    window.open(feedContent.feedContent.url);\n  }\n\n  return (\n    <div className=\"card\" onClick={oncli}>\n      <div className=\"title\">\n        <p>{feedContent.feedContent.title}</p>\n      </div>\n      <div className=\"source\">\n        {feedContent.feedContent.publisher === \"CannabisNet\" ? (\n          <p>Cananbis.net {feedDate}</p>\n        ) : (\n            <p>{feedContent.feedContent.publisher} {feedDate}</p>\n          )}\n      </div>\n      <div className=\"image-div\">\n        <img src={feedContent.feedContent.image} className=\"image\" alt=\"\" />\n      </div>\n      <div className=\"description\">\n        <p>{feedContent.feedContent.description}</p>\n      </div>\n      <div className=\"action\">\n        <OpenInBrowser className=\"mr-4\" />\n        <BookMark />\n      </div>\n    </div>\n  );\n}\n\nexport default FeedArea;\n"]},"metadata":{},"sourceType":"module"}