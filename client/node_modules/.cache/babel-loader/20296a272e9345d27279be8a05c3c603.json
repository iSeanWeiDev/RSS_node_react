{"ast":null,"code":"import axios from 'axios';\nexport const feedSearch = async searchQuery => {\n  if (Array.isArray(searchQuery)) {\n    return new Promise((resolve, reject) => {\n      axios.all(searchQuery.map(url => axios.post('/api/feed', {\n        url: url\n      }))).then(axios.spread(function (...res) {\n        resolve(res);\n      }));\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      axios.post(\"/api/feed\", {\n        url: searchQuery\n      }).then(res => {\n        resolve(res.data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/src/api/index.js"],"names":["axios","feedSearch","searchQuery","Array","isArray","Promise","resolve","reject","all","map","url","post","then","spread","res","data","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,WAAP,IAAuB;AAC/C,MAAIC,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAJ,EAAgC;AAC9B,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,KAAK,CAACQ,GAAN,CAAUN,WAAW,CAACO,GAAZ,CAAiBC,GAAD,IAASV,KAAK,CAACW,IAAN,CAAW,WAAX,EAAwB;AAAED,QAAAA,GAAG,EAAEA;AAAP,OAAxB,CAAzB,CAAV,EACGE,IADH,CACQZ,KAAK,CAACa,MAAN,CAAa,UAAU,GAAGC,GAAb,EAAkB;AACnCR,QAAAA,OAAO,CAACQ,GAAD,CAAP;AACD,OAFK,CADR;AAID,KALM,CAAP;AAMD,GAPD,MAOO;AACL,WAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,KAAK,CAACW,IAAN,cAAwB;AACtBD,QAAAA,GAAG,EAAER;AADiB,OAAxB,EAGGU,IAHH,CAGSE,GAAD,IAAS;AACbR,QAAAA,OAAO,CAACQ,GAAG,CAACC,IAAL,CAAP;AACD,OALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBV,QAAAA,MAAM,CAACU,KAAD,CAAN;AACD,OARH;AASD,KAVM,CAAP;AAWD;AACF,CArBM","sourcesContent":["import axios from 'axios';\n\nexport const feedSearch = async (searchQuery) => {\n  if (Array.isArray(searchQuery)) {\n    return new Promise((resolve, reject) => {\n      axios.all(searchQuery.map((url) => axios.post('/api/feed', { url: url })))\n        .then(axios.spread(function (...res) {\n          resolve(res);\n        }));\n    })\n  } else {\n    return new Promise((resolve, reject) => {\n      axios.post(`/api/feed`, {\n        url: searchQuery\n      })\n        .then((res) => {\n          resolve(res.data)\n        })\n        .catch((error) => {\n          reject(error)\n        })\n    })\n  }\n};"]},"metadata":{},"sourceType":"module"}