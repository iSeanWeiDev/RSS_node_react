{"ast":null,"code":"import _defineProperty from \"/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducers';\nimport logger from 'redux-logger';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  return _objectSpread({}, createStore(rootReducer, applyMiddleware(sagaMiddleware, logger)), {\n    runSaga: sagaMiddleware.run(rootSaga)\n  });\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/src/stores/configureStores.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","rootReducer","logger","rootSaga","configureStore","sagaMiddleware","runSaga","run"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,2BACKF,WAAW,CAACG,WAAD,EACZF,eAAe,CAACM,cAAD,EAAiBH,MAAjB,CADH,CADhB;AAGEI,IAAAA,OAAO,EAAED,cAAc,CAACE,GAAf,CAAmBJ,QAAnB;AAHX;AAKD,CAPD;;AASA,eAAeC,cAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducers';\nimport logger from 'redux-logger';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  return {\n    ...createStore(rootReducer,\n      applyMiddleware(sagaMiddleware, logger)),\n    runSaga: sagaMiddleware.run(rootSaga)\n  };\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}