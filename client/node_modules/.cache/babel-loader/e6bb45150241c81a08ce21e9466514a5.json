{"ast":null,"code":"var _jsxFileName = \"/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/src/components/feedWidget.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport FeedArea from './feedArea';\nimport './feedWidget.css';\n\nclass FeedWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCount: 1,\n      pending: 'true',\n      data: [],\n      paged: 1,\n      limit: 6\n    };\n    this.timer = this.timer.bind(this);\n    this.trackScrolling = this.trackScrolling.bind(this);\n  }\n\n  compare(a, b) {\n    const dataA = a.date;\n    const dateB = b.date;\n    let comparison = 0;\n\n    if (dataA < dateB) {\n      comparison = 1;\n    } else if (dataA > dateB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  isBottom(el) {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  trackScrolling() {\n    const wrappedElement = document.getElementById('feed-area-image');\n\n    if (this.isBottom(wrappedElement)) {\n      const currentPaged = this.state.paged + 1;\n      this.setState({\n        paged: currentPaged\n      });\n      this.props.onStateChange(\"no-active\");\n\n      if (Array.isArray(this.props.feedurl)) {\n        const feedList = this.props.feedurl.map(url => {\n          return url.url + '?paged=' + this.state.paged + 1;\n        });\n        let index = 0;\n\n        for (var i = 0; i < feedList.length; i++) {\n          try {\n            axios.post('/api/feed/' + this.props.feedurl[i].version, {\n              url: feedList[i]\n            }).then(({\n              data: {\n                data: feedData\n              }\n            }) => {\n              index++;\n              let data = this.state.data;\n              data = [...data, ...feedData];\n              this.setState({\n                pending: false,\n                data\n              });\n\n              if (index === feedList.length) {\n                this.props.onStateChange(\"active\");\n              }\n            }).catch(err => {\n              console.log(err);\n            });\n          } catch (error) {\n            console.log(\"error\", error);\n          }\n        }\n      } else {\n        try {\n          this.setState({\n            pending: true\n          });\n          axios.post('/api/feed/' + this.props.version, {\n            url: this.props.feedurl + '?paged=' + this.state.paged + 1\n          }).then(({\n            data: {\n              data: feedData\n            }\n          }) => {\n            let data = this.state.data;\n            data = [...data, ...feedData];\n            this.setState({\n              pending: false,\n              data\n            });\n            this.props.onStateChange(\"active\");\n          }).catch(err => {\n            console.log(err);\n          });\n        } catch (error) {\n          console.log(\"error\", error);\n        }\n      }\n    }\n  }\n\n  timer() {\n    const newCount = this.state.currentCount - 1;\n\n    if (newCount >= 0) {\n      this.setState({\n        currentCount: newCount\n      });\n    } else {\n      const _this$props = this.props,\n            feedurl = _this$props.feedurl,\n            main = _this$props.main;\n\n      if (main) {\n        const feedList = feedurl.map(url => {\n          return url.url;\n        });\n\n        try {\n          let index = 0;\n          this.props.onStateChange(\"no-active\");\n\n          for (var i = 0; i < feedList.length; i++) {\n            axios.post('/api/feed/' + feedurl[i].version, {\n              url: feedList[i]\n            }).then(({\n              data: {\n                data: feedData\n              }\n            }) => {\n              index++;\n              let data = this.state.data;\n              data = [...data, ...feedData];\n              this.setState({\n                pending: false,\n                data\n              });\n\n              if (index === feedList.length) {\n                this.props.onStateChange(\"active\");\n              }\n            }).catch(err => {\n              console.log(err);\n            });\n          }\n        } catch (error) {\n          console.log(\"error\", error);\n        }\n      }\n\n      clearInterval(this.state.intervalId);\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: [],\n      paged: 1\n    });\n    this.props.onStateChange(\"no-active\");\n    this.setState({\n      pending: true\n    });\n    axios.post('/api/feeds/all.rss').then(({\n      data: {\n        data: feedData\n      }\n    }) => {\n      let data = this.state.data;\n      data = [...data, ...feedData];\n      this.setState({\n        pending: false,\n        data\n      });\n      this.props.onStateChange(\"active\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidUpdate(preProps) {\n    const _this$props2 = this.props,\n          feedname = _this$props2.feedname,\n          main = _this$props2.main;\n\n    if (feedname !== preProps.feedname) {\n      console.log(feedname, main);\n\n      if (main) {} else {}\n    } // if (feedurl !== preProps.feedurl) {\n    //   this.setState({\n    //     data: [],\n    //     paged: 1\n    //   })\n    //   this.props.onStateChange(\"no-active\");\n    //   if (main) {\n    //     const feedList = feedurl.map((url) => {\n    //       return url.url;\n    //     })\n    //     let index = 0;\n    //     for (var i = 0; i < feedList.length; i++) {\n    //       try {\n    //         this.setState({ pending: true })\n    //         axios.post('/api/feeds', { name: feedList[i] })\n    //           .then(({ data: { data: feedData } }) => {\n    //             index++;\n    //             let { data } = this.state;\n    //             data = [...data, ...feedData];\n    //             this.setState({\n    //               pending: false,\n    //               data\n    //             })\n    //             if (index === feedList.length) {\n    //               this.props.onStateChange(\"active\");\n    //             }\n    //           })\n    //           .catch(err => {\n    //             console.log(err)\n    //           })\n    //       } catch (error) {\n    //         console.log(\"error\", error)\n    //       }\n    //     }\n    //   } else {\n    //     try {\n    //       this.setState({\n    //         pending: true,\n    //       })\n    //       axios.post('/api/feed/' + this.props.version, { url: feedurl })\n    //         .then(({ data: { data: feedData } }) => {\n    //           let { data } = this.state;\n    //           data = [...data, ...feedData];\n    //           this.setState({\n    //             pending: false,\n    //             data\n    //           })\n    //           this.props.onStateChange(\"active\");\n    //         })\n    //         .catch(err => {\n    //           console.log(err)\n    //         })\n    //     } catch (error) {\n    //       console.log(\"error\", error)\n    //     }\n    //   }\n    // }\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.trackScrolling);\n  }\n\n  render() {\n    this.state.data.sort(this.compare);\n    return React.createElement(\"div\", {\n      className: \"feed-area-image\",\n      id: \"feed-area-image\",\n      onScroll: this.trackScrolling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.state.pending ? React.createElement(\"div\", {\n      className: \"image-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"logos/loading-gif1.gif\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, this.state.data && this.state.data.map(feed => {\n      return React.createElement(\"div\", {\n        className: \"col-lg-4 col-md-6 col-xs-12 mb-4 feed-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(FeedArea, {\n        feedContent: feed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nFeedWidget.propTypes = {\n  urlList: PropTypes.object,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  urlList: state.feed\n});\n\nexport default connect(mapStateToProps)(FeedWidget);","map":{"version":3,"sources":["/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/src/components/feedWidget.js"],"names":["React","Component","connect","PropTypes","axios","FeedArea","FeedWidget","constructor","props","state","currentCount","pending","data","paged","limit","timer","bind","trackScrolling","compare","a","b","dataA","date","dateB","comparison","isBottom","el","getBoundingClientRect","bottom","window","innerHeight","wrappedElement","document","getElementById","currentPaged","setState","onStateChange","Array","isArray","feedurl","feedList","map","url","index","i","length","post","version","then","feedData","catch","err","console","log","error","newCount","main","clearInterval","intervalId","componentDidMount","componentDidUpdate","preProps","feedname","componentWillUnmount","removeEventListener","render","sort","feed","propTypes","urlList","object","dispatch","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport FeedArea from './feedArea';\nimport './feedWidget.css'\n\nclass FeedWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentCount: 1,\n      pending: 'true',\n      data: [],\n      paged: 1,\n      limit: 6,\n    }\n\n    this.timer = this.timer.bind(this);\n    this.trackScrolling = this.trackScrolling.bind(this);\n  }\n\n  compare(a, b) {\n    const dataA = a.date;\n    const dateB = b.date;\n\n    let comparison = 0;\n    if (dataA < dateB) {\n      comparison = 1;\n    } else if (dataA > dateB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  isBottom(el) {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  trackScrolling() {\n    const wrappedElement = document.getElementById('feed-area-image');\n    if (this.isBottom(wrappedElement)) {\n      const currentPaged = this.state.paged + 1;\n      this.setState({\n        paged: currentPaged\n      })\n\n      this.props.onStateChange(\"no-active\");\n      if (Array.isArray(this.props.feedurl)) {\n        const feedList = this.props.feedurl.map((url) => {\n          return url.url + '?paged=' + this.state.paged + 1;\n        })\n\n        let index = 0;\n        for (var i = 0; i < feedList.length; i++) {\n          try {\n            axios.post('/api/feed/' + this.props.feedurl[i].version, { url: feedList[i] })\n              .then(({ data: { data: feedData } }) => {\n                index++;\n                let { data } = this.state;\n                data = [...data, ...feedData];\n                this.setState({\n                  pending: false,\n                  data\n                })\n                if (index === feedList.length) {\n                  this.props.onStateChange(\"active\");\n                }\n              })\n              .catch(err => {\n                console.log(err)\n              })\n          } catch (error) {\n            console.log(\"error\", error)\n          }\n        }\n      } else {\n        try {\n          this.setState({\n            pending: true,\n          })\n          axios.post('/api/feed/' + this.props.version, { url: this.props.feedurl + '?paged=' + this.state.paged + 1 })\n            .then(({ data: { data: feedData } }) => {\n              let { data } = this.state;\n              data = [...data, ...feedData];\n              this.setState({\n                pending: false,\n                data\n              })\n              this.props.onStateChange(\"active\");\n            })\n            .catch(err => {\n              console.log(err)\n            })\n        } catch (error) {\n          console.log(\"error\", error)\n        }\n      }\n    }\n  };\n\n  timer() {\n    const newCount = this.state.currentCount - 1;\n    if (newCount >= 0) {\n      this.setState({ currentCount: newCount });\n    } else {\n      const { feedurl, main } = this.props;\n      if (main) {\n        const feedList = feedurl.map((url) => {\n          return url.url;\n        })\n\n        try {\n          let index = 0;\n          this.props.onStateChange(\"no-active\");\n          for (var i = 0; i < feedList.length; i++) {\n            axios.post('/api/feed/' + feedurl[i].version, { url: feedList[i] })\n              .then(({ data: { data: feedData } }) => {\n                index++;\n                let { data } = this.state;\n                data = [...data, ...feedData];\n                this.setState({\n                  pending: false,\n                  data\n                })\n                if (index === feedList.length) {\n                  this.props.onStateChange(\"active\");\n                }\n              })\n              .catch(err => {\n                console.log(err)\n              })\n          }\n        } catch (error) {\n          console.log(\"error\", error)\n        }\n      }\n      clearInterval(this.state.intervalId);\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: [],\n      paged: 1\n    })\n\n    this.props.onStateChange(\"no-active\");\n    this.setState({ pending: true })\n    axios.post('/api/feeds/all.rss')\n      .then(({ data: { data: feedData } }) => {\n        let { data } = this.state;\n        data = [...data, ...feedData];\n        this.setState({\n          pending: false,\n          data\n        })\n\n        this.props.onStateChange(\"active\");\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  componentDidUpdate(preProps) {\n    const { feedname, main } = this.props;\n    if (feedname !== preProps.feedname) {\n      console.log(feedname, main);\n\n      if (main) {\n\n      } else {\n        \n      }\n    }\n    \n    // if (feedurl !== preProps.feedurl) {\n    //   this.setState({\n    //     data: [],\n    //     paged: 1\n    //   })\n\n    //   this.props.onStateChange(\"no-active\");\n    //   if (main) {\n    //     const feedList = feedurl.map((url) => {\n    //       return url.url;\n    //     })\n\n    //     let index = 0;\n    //     for (var i = 0; i < feedList.length; i++) {\n    //       try {\n    //         this.setState({ pending: true })\n    //         axios.post('/api/feeds', { name: feedList[i] })\n    //           .then(({ data: { data: feedData } }) => {\n    //             index++;\n    //             let { data } = this.state;\n    //             data = [...data, ...feedData];\n    //             this.setState({\n    //               pending: false,\n    //               data\n    //             })\n    //             if (index === feedList.length) {\n    //               this.props.onStateChange(\"active\");\n    //             }\n    //           })\n    //           .catch(err => {\n    //             console.log(err)\n    //           })\n    //       } catch (error) {\n    //         console.log(\"error\", error)\n    //       }\n    //     }\n    //   } else {\n    //     try {\n    //       this.setState({\n    //         pending: true,\n    //       })\n    //       axios.post('/api/feed/' + this.props.version, { url: feedurl })\n    //         .then(({ data: { data: feedData } }) => {\n    //           let { data } = this.state;\n    //           data = [...data, ...feedData];\n    //           this.setState({\n    //             pending: false,\n    //             data\n    //           })\n    //           this.props.onStateChange(\"active\");\n    //         })\n    //         .catch(err => {\n    //           console.log(err)\n    //         })\n    //     } catch (error) {\n    //       console.log(\"error\", error)\n    //     }\n    //   }\n    // }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.trackScrolling);\n  }\n\n  render() {\n    this.state.data.sort(this.compare);\n\n    return (\n      <div className=\"feed-area-image\" id=\"feed-area-image\" onScroll={this.trackScrolling}>\n        {this.state.pending ? (\n          <div className=\"image-area\">\n            <img src=\"logos/loading-gif1.gif\" alt=\"\" />\n          </div>\n        ) : (\n            <div className=\"row\">\n              {this.state.data && this.state.data.map((feed) => {\n                return (\n                  <div className=\"col-lg-4 col-md-6 col-xs-12 mb-4 feed-area\">\n                    <FeedArea\n                      feedContent={feed}\n                    />\n                  </div>\n                )\n              })}\n            </div>\n          )}\n      </div>\n    )\n  }\n}\n\nFeedWidget.propTypes = {\n  urlList: PropTypes.object,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  urlList: state.feed\n});\n\nexport default connect(mapStateToProps)(FeedWidget);\n"]},"metadata":{},"sourceType":"module"}