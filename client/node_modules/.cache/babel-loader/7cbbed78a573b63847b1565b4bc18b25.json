{"ast":null,"code":"import _defineProperty from \"/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../constants/actionTypes';\nexport default function (state = {\n  urlList: [],\n  pending: false\n}, action) {\n  switch (action.type) {\n    case types.FETCH_FEED_SUCCESS:\n      return _objectSpread({}, state, {\n        urlList: action.urlList,\n        pending: false\n      });\n\n    case types.FETCH_FEED:\n      return _objectSpread({}, state, {\n        urlList: action.urlList,\n        pending: true\n      });\n\n    case types.FETCH_FEED_FAILURE:\n      return _objectSpread({}, state, {\n        urlList: action.urlList,\n        pending: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/panamacheng/Desktop/Workspace/weedfeed-dev/client/src/reducers/feedReducer.js"],"names":["types","state","urlList","pending","action","type","FETCH_FEED_SUCCESS","FETCH_FEED","FETCH_FEED_FAILURE"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,eAAe,UAAUC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE,EAAX;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAlB,EAAmDC,MAAnD,EAA2D;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,KAAK,CAACM,kBAAX;AACE,+BAAYL,KAAZ;AAAmBC,QAAAA,OAAO,EAAEE,MAAM,CAACF,OAAnC;AAA4CC,QAAAA,OAAO,EAAE;AAArD;;AACF,SAAKH,KAAK,CAACO,UAAX;AACE,+BAAYN,KAAZ;AAAmBC,QAAAA,OAAO,EAAEE,MAAM,CAACF,OAAnC;AAA4CC,QAAAA,OAAO,EAAE;AAArD;;AACF,SAAKH,KAAK,CAACQ,kBAAX;AACE,+BAAYP,KAAZ;AAAmBC,QAAAA,OAAO,EAAEE,MAAM,CAACF,OAAnC;AAA4CC,QAAAA,OAAO,EAAE;AAArD;;AACF;AACE,aAAOF,KAAP;AARJ;AAUD","sourcesContent":["import * as types from '../constants/actionTypes';\n\nexport default function (state = { urlList: [], pending: false }, action) {\n  switch (action.type) {\n    case types.FETCH_FEED_SUCCESS:\n      return { ...state, urlList: action.urlList, pending: false };\n    case types.FETCH_FEED:\n      return { ...state, urlList: action.urlList, pending: true };\n    case types.FETCH_FEED_FAILURE:\n      return { ...state, urlList: action.urlList, pending: false };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}